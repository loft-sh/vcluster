version: v2beta1
name: vcluster

# Variables used
vars:
  # Make sure vcluster is the default namespace
  DEVSPACE_FLAGS: "-n vcluster"
  SYNCER_IMAGE: ghcr.io/loft-sh/loft-enterprise/dev-vcluster
  # COMMON_VALUES: ./test/commonValues.yaml
  # CONFORMANCE_VALUES: ./test/conformanceValues.yaml
  # PRO_VALUES: ./test/proValues.yaml
  # VALUES_FILE: ./test/e2e/values.yaml

# Images DevSpace will build for vcluster
images:
  vcluster:
    dockerfile: ../Dockerfile.release
    image: ${SYNCER_IMAGE}
    rebuildStrategy: ignoreContextChanges
    target: builder
    buildKit: {}

# Dev Configuration for vcluster
dev:
  vcluster:
    imageSelector: ${SYNCER_IMAGE}
    container: syncer
    workingDir: /vcluster-dev
    resources:
      limits:
        cpu: "0" # to prevent CPU throttling during compilation
        memory: "0" # to prevent OOM kills which can happen during first compilation due to high number of deps
    terminal:
      command: "./devspace_start.sh"
    ports:
      - port: 2346:2345
    sync:
      - excludePaths:
          - "**"
          - "!/pkg"
          - "cmd/vclusterctl/cmd/charts"
          - "!/cmd"
          - "!/vendor"
          - "!/config"
          - "!/hack"
          - "!/go.mod"
          - "!/go.sum"
          - "!/devspace_start.sh"
          - "!/manifests"
          - "/manifests/coredns" # shouldn't sync to this path because it is mounted from a ConfigMap as ReadOnly

# Pipelines used for vcluster
pipelines:
  dev:
    run: |-
      # Deploy the vcluster
      run_pipelines deploy

      # Start dev mode
      start_dev --all
      
  deploy:
    run: |-
      # Make sure pull secrets are there
      ensure_pull_secrets --all

      # Build the vcluster image
      build_images --all

      if $(is_in "test-conformance" "${DEVSPACE_PROFILES}"); then
        kind load docker-image $(get_image "vcluster") --overwrite=false || true
      fi

  purge:
    run: |-
      # Purge the vcluster
      run_default_pipeline purge

      # Make sure the pvcs are deleted as well
      kubectl delete pvc --all -n ${DEVSPACE_NAMESPACE}

# commands:
#   # e.g. devspace run test k3s
#   # e.g. devspace run test k3s --var VALUES_FILE=./test/e2e_node
#   test: |-
#     devspace purge -n ${DEVSPACE_NAMESPACE} --debug
#     devspace dev -n ${DEVSPACE_NAMESPACE} --profile test-$@
