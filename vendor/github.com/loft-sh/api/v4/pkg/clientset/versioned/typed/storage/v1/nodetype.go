// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	storagev1 "github.com/loft-sh/api/v4/pkg/apis/storage/v1"
	scheme "github.com/loft-sh/api/v4/pkg/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// NodeTypesGetter has a method to return a NodeTypeInterface.
// A group's client should implement this interface.
type NodeTypesGetter interface {
	NodeTypes() NodeTypeInterface
}

// NodeTypeInterface has methods to work with NodeType resources.
type NodeTypeInterface interface {
	Create(ctx context.Context, nodeType *storagev1.NodeType, opts metav1.CreateOptions) (*storagev1.NodeType, error)
	Update(ctx context.Context, nodeType *storagev1.NodeType, opts metav1.UpdateOptions) (*storagev1.NodeType, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, nodeType *storagev1.NodeType, opts metav1.UpdateOptions) (*storagev1.NodeType, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*storagev1.NodeType, error)
	List(ctx context.Context, opts metav1.ListOptions) (*storagev1.NodeTypeList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *storagev1.NodeType, err error)
	NodeTypeExpansion
}

// nodeTypes implements NodeTypeInterface
type nodeTypes struct {
	*gentype.ClientWithList[*storagev1.NodeType, *storagev1.NodeTypeList]
}

// newNodeTypes returns a NodeTypes
func newNodeTypes(c *StorageV1Client) *nodeTypes {
	return &nodeTypes{
		gentype.NewClientWithList[*storagev1.NodeType, *storagev1.NodeTypeList](
			"nodetypes",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *storagev1.NodeType { return &storagev1.NodeType{} },
			func() *storagev1.NodeTypeList { return &storagev1.NodeTypeList{} },
		),
	}
}
