//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1

import (
	storagev1 "github.com/loft-sh/agentapi/v4/pkg/apis/loft/storage/v1"
	corev1 "k8s.io/api/core/v1"
	rbacv1 "k8s.io/api/rbac/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Access) DeepCopyInto(out *Access) {
	*out = *in
	if in.Verbs != nil {
		in, out := &in.Verbs, &out.Verbs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Subresources != nil {
		in, out := &in.Subresources, &out.Subresources
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Access.
func (in *Access) DeepCopy() *Access {
	if in == nil {
		return nil
	}
	out := new(Access)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKey) DeepCopyInto(out *AccessKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKey.
func (in *AccessKey) DeepCopy() *AccessKey {
	if in == nil {
		return nil
	}
	out := new(AccessKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyList) DeepCopyInto(out *AccessKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AccessKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyList.
func (in *AccessKeyList) DeepCopy() *AccessKeyList {
	if in == nil {
		return nil
	}
	out := new(AccessKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AccessKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyOIDC) DeepCopyInto(out *AccessKeyOIDC) {
	*out = *in
	if in.IDToken != nil {
		in, out := &in.IDToken, &out.IDToken
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.AccessToken != nil {
		in, out := &in.AccessToken, &out.AccessToken
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.RefreshToken != nil {
		in, out := &in.RefreshToken, &out.RefreshToken
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	if in.LastRefresh != nil {
		in, out := &in.LastRefresh, &out.LastRefresh
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyOIDC.
func (in *AccessKeyOIDC) DeepCopy() *AccessKeyOIDC {
	if in == nil {
		return nil
	}
	out := new(AccessKeyOIDC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyOIDCProvider) DeepCopyInto(out *AccessKeyOIDCProvider) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyOIDCProvider.
func (in *AccessKeyOIDCProvider) DeepCopy() *AccessKeyOIDCProvider {
	if in == nil {
		return nil
	}
	out := new(AccessKeyOIDCProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScope) DeepCopyInto(out *AccessKeyScope) {
	*out = *in
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]AccessKeyScopeRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Projects != nil {
		in, out := &in.Projects, &out.Projects
		*out = make([]AccessKeyScopeProject, len(*in))
		copy(*out, *in)
	}
	if in.Spaces != nil {
		in, out := &in.Spaces, &out.Spaces
		*out = make([]AccessKeyScopeSpace, len(*in))
		copy(*out, *in)
	}
	if in.VirtualClusters != nil {
		in, out := &in.VirtualClusters, &out.VirtualClusters
		*out = make([]AccessKeyScopeVirtualCluster, len(*in))
		copy(*out, *in)
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]AccessKeyScopeCluster, len(*in))
		copy(*out, *in)
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]AccessKeyScopeRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScope.
func (in *AccessKeyScope) DeepCopy() *AccessKeyScope {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScope)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeCluster) DeepCopyInto(out *AccessKeyScopeCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeCluster.
func (in *AccessKeyScopeCluster) DeepCopy() *AccessKeyScopeCluster {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeProject) DeepCopyInto(out *AccessKeyScopeProject) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeProject.
func (in *AccessKeyScopeProject) DeepCopy() *AccessKeyScopeProject {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeRole) DeepCopyInto(out *AccessKeyScopeRole) {
	*out = *in
	if in.Projects != nil {
		in, out := &in.Projects, &out.Projects
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.VirtualClusters != nil {
		in, out := &in.VirtualClusters, &out.VirtualClusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeRole.
func (in *AccessKeyScopeRole) DeepCopy() *AccessKeyScopeRole {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeRule) DeepCopyInto(out *AccessKeyScopeRule) {
	*out = *in
	if in.Verbs != nil {
		in, out := &in.Verbs, &out.Verbs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]GroupResources, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NonResourceURLs != nil {
		in, out := &in.NonResourceURLs, &out.NonResourceURLs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RequestTargets != nil {
		in, out := &in.RequestTargets, &out.RequestTargets
		*out = make([]RequestTarget, len(*in))
		copy(*out, *in)
	}
	if in.VirtualClusters != nil {
		in, out := &in.VirtualClusters, &out.VirtualClusters
		*out = make([]AccessKeyVirtualCluster, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeRule.
func (in *AccessKeyScopeRule) DeepCopy() *AccessKeyScopeRule {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeSpace) DeepCopyInto(out *AccessKeyScopeSpace) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeSpace.
func (in *AccessKeyScopeSpace) DeepCopy() *AccessKeyScopeSpace {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeSpace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyScopeVirtualCluster) DeepCopyInto(out *AccessKeyScopeVirtualCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyScopeVirtualCluster.
func (in *AccessKeyScopeVirtualCluster) DeepCopy() *AccessKeyScopeVirtualCluster {
	if in == nil {
		return nil
	}
	out := new(AccessKeyScopeVirtualCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeySpec) DeepCopyInto(out *AccessKeySpec) {
	*out = *in
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(AccessKeyScope)
		(*in).DeepCopyInto(*out)
	}
	if in.Identity != nil {
		in, out := &in.Identity, &out.Identity
		*out = new(SSOIdentity)
		(*in).DeepCopyInto(*out)
	}
	if in.IdentityRefresh != nil {
		in, out := &in.IdentityRefresh, &out.IdentityRefresh
		*out = (*in).DeepCopy()
	}
	if in.OIDCProvider != nil {
		in, out := &in.OIDCProvider, &out.OIDCProvider
		*out = new(AccessKeyOIDCProvider)
		**out = **in
	}
	if in.OIDCLogin != nil {
		in, out := &in.OIDCLogin, &out.OIDCLogin
		*out = new(AccessKeyOIDC)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeySpec.
func (in *AccessKeySpec) DeepCopy() *AccessKeySpec {
	if in == nil {
		return nil
	}
	out := new(AccessKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyStatus) DeepCopyInto(out *AccessKeyStatus) {
	*out = *in
	if in.LastActivity != nil {
		in, out := &in.LastActivity, &out.LastActivity
		*out = (*in).DeepCopy()
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyStatus.
func (in *AccessKeyStatus) DeepCopy() *AccessKeyStatus {
	if in == nil {
		return nil
	}
	out := new(AccessKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessKeyVirtualCluster) DeepCopyInto(out *AccessKeyVirtualCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessKeyVirtualCluster.
func (in *AccessKeyVirtualCluster) DeepCopy() *AccessKeyVirtualCluster {
	if in == nil {
		return nil
	}
	out := new(AccessKeyVirtualCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedCluster) DeepCopyInto(out *AllowedCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedCluster.
func (in *AllowedCluster) DeepCopy() *AllowedCluster {
	if in == nil {
		return nil
	}
	out := new(AllowedCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedClusterAccountTemplate) DeepCopyInto(out *AllowedClusterAccountTemplate) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedClusterAccountTemplate.
func (in *AllowedClusterAccountTemplate) DeepCopy() *AllowedClusterAccountTemplate {
	if in == nil {
		return nil
	}
	out := new(AllowedClusterAccountTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedRunner) DeepCopyInto(out *AllowedRunner) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedRunner.
func (in *AllowedRunner) DeepCopy() *AllowedRunner {
	if in == nil {
		return nil
	}
	out := new(AllowedRunner)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowedTemplate) DeepCopyInto(out *AllowedTemplate) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowedTemplate.
func (in *AllowedTemplate) DeepCopy() *AllowedTemplate {
	if in == nil {
		return nil
	}
	out := new(AllowedTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *App) DeepCopyInto(out *App) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new App.
func (in *App) DeepCopy() *App {
	if in == nil {
		return nil
	}
	out := new(App)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *App) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppConfig) DeepCopyInto(out *AppConfig) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]AppParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StreamContainer != nil {
		in, out := &in.StreamContainer, &out.StreamContainer
		*out = new(StreamContainer)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppConfig.
func (in *AppConfig) DeepCopy() *AppConfig {
	if in == nil {
		return nil
	}
	out := new(AppConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppList) DeepCopyInto(out *AppList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]App, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppList.
func (in *AppList) DeepCopy() *AppList {
	if in == nil {
		return nil
	}
	out := new(AppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppParameter) DeepCopyInto(out *AppParameter) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(int)
		**out = **in
	}
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppParameter.
func (in *AppParameter) DeepCopy() *AppParameter {
	if in == nil {
		return nil
	}
	out := new(AppParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppReference) DeepCopyInto(out *AppReference) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppReference.
func (in *AppReference) DeepCopy() *AppReference {
	if in == nil {
		return nil
	}
	out := new(AppReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppSpec) DeepCopyInto(out *AppSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.RecommendedApp != nil {
		in, out := &in.RecommendedApp, &out.RecommendedApp
		*out = make([]RecommendedApp, len(*in))
		copy(*out, *in)
	}
	in.AppConfig.DeepCopyInto(&out.AppConfig)
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]AppVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Helm != nil {
		in, out := &in.Helm, &out.Helm
		*out = new(HelmConfiguration)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppSpec.
func (in *AppSpec) DeepCopy() *AppSpec {
	if in == nil {
		return nil
	}
	out := new(AppSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppStatus) DeepCopyInto(out *AppStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppStatus.
func (in *AppStatus) DeepCopy() *AppStatus {
	if in == nil {
		return nil
	}
	out := new(AppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppTask) DeepCopyInto(out *AppTask) {
	*out = *in
	out.AppReference = in.AppReference
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppTask.
func (in *AppTask) DeepCopy() *AppTask {
	if in == nil {
		return nil
	}
	out := new(AppTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppVersion) DeepCopyInto(out *AppVersion) {
	*out = *in
	in.AppConfig.DeepCopyInto(&out.AppConfig)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppVersion.
func (in *AppVersion) DeepCopy() *AppVersion {
	if in == nil {
		return nil
	}
	out := new(AppVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoIntegrationSpec) DeepCopyInto(out *ArgoIntegrationSpec) {
	*out = *in
	if in.SSO != nil {
		in, out := &in.SSO, &out.SSO
		*out = new(ArgoSSOSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(ArgoProjectSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoIntegrationSpec.
func (in *ArgoIntegrationSpec) DeepCopy() *ArgoIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(ArgoIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoProjectPolicyRule) DeepCopyInto(out *ArgoProjectPolicyRule) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoProjectPolicyRule.
func (in *ArgoProjectPolicyRule) DeepCopy() *ArgoProjectPolicyRule {
	if in == nil {
		return nil
	}
	out := new(ArgoProjectPolicyRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoProjectRole) DeepCopyInto(out *ArgoProjectRole) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]ArgoProjectPolicyRule, len(*in))
		copy(*out, *in)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoProjectRole.
func (in *ArgoProjectRole) DeepCopy() *ArgoProjectRole {
	if in == nil {
		return nil
	}
	out := new(ArgoProjectRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoProjectSpec) DeepCopyInto(out *ArgoProjectSpec) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	if in.SourceRepos != nil {
		in, out := &in.SourceRepos, &out.SourceRepos
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]ArgoProjectRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoProjectSpec.
func (in *ArgoProjectSpec) DeepCopy() *ArgoProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ArgoProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoProjectSpecMetadata) DeepCopyInto(out *ArgoProjectSpecMetadata) {
	*out = *in
	if in.ExtraAnnotations != nil {
		in, out := &in.ExtraAnnotations, &out.ExtraAnnotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExtraLabels != nil {
		in, out := &in.ExtraLabels, &out.ExtraLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoProjectSpecMetadata.
func (in *ArgoProjectSpecMetadata) DeepCopy() *ArgoProjectSpecMetadata {
	if in == nil {
		return nil
	}
	out := new(ArgoProjectSpecMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoSSOSpec) DeepCopyInto(out *ArgoSSOSpec) {
	*out = *in
	if in.AssignedRoles != nil {
		in, out := &in.AssignedRoles, &out.AssignedRoles
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoSSOSpec.
func (in *ArgoSSOSpec) DeepCopy() *ArgoSSOSpec {
	if in == nil {
		return nil
	}
	out := new(ArgoSSOSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BCMNodeTypeSpec) DeepCopyInto(out *BCMNodeTypeSpec) {
	*out = *in
	in.NamedNodeTypeSpec.DeepCopyInto(&out.NamedNodeTypeSpec)
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.NodeGroups != nil {
		in, out := &in.NodeGroups, &out.NodeGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BCMNodeTypeSpec.
func (in *BCMNodeTypeSpec) DeepCopy() *BCMNodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(BCMNodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Chart) DeepCopyInto(out *Chart) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Chart.
func (in *Chart) DeepCopy() *Chart {
	if in == nil {
		return nil
	}
	out := new(Chart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartStatus) DeepCopyInto(out *ChartStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartStatus.
func (in *ChartStatus) DeepCopy() *ChartStatus {
	if in == nil {
		return nil
	}
	out := new(ChartStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAPINodeTypeSpec) DeepCopyInto(out *ClusterAPINodeTypeSpec) {
	*out = *in
	in.NamedNodeTypeSpec.DeepCopyInto(&out.NamedNodeTypeSpec)
	in.ClusterAPIObjects.DeepCopyInto(&out.ClusterAPIObjects)
	if in.MergeInfrastructureMachineTemplate != nil {
		in, out := &in.MergeInfrastructureMachineTemplate, &out.MergeInfrastructureMachineTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.MergeBootstrapConfigTemplate != nil {
		in, out := &in.MergeBootstrapConfigTemplate, &out.MergeBootstrapConfigTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAPINodeTypeSpec.
func (in *ClusterAPINodeTypeSpec) DeepCopy() *ClusterAPINodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterAPINodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAPIObjects) DeepCopyInto(out *ClusterAPIObjects) {
	*out = *in
	if in.InfrastructureMachineTemplate != nil {
		in, out := &in.InfrastructureMachineTemplate, &out.InfrastructureMachineTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.BootstrapConfigTemplate != nil {
		in, out := &in.BootstrapConfigTemplate, &out.BootstrapConfigTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAPIObjects.
func (in *ClusterAPIObjects) DeepCopy() *ClusterAPIObjects {
	if in == nil {
		return nil
	}
	out := new(ClusterAPIObjects)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAccess) DeepCopyInto(out *ClusterAccess) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAccess.
func (in *ClusterAccess) DeepCopy() *ClusterAccess {
	if in == nil {
		return nil
	}
	out := new(ClusterAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterAccess) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAccessList) DeepCopyInto(out *ClusterAccessList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterAccess, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAccessList.
func (in *ClusterAccessList) DeepCopy() *ClusterAccessList {
	if in == nil {
		return nil
	}
	out := new(ClusterAccessList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterAccessList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAccessSpec) DeepCopyInto(out *ClusterAccessSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.LocalClusterAccessTemplate.DeepCopyInto(&out.LocalClusterAccessTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAccessSpec.
func (in *ClusterAccessSpec) DeepCopy() *ClusterAccessSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterAccessStatus) DeepCopyInto(out *ClusterAccessStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterAccessStatus.
func (in *ClusterAccessStatus) DeepCopy() *ClusterAccessStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterAccessStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRef) DeepCopyInto(out *ClusterRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRef.
func (in *ClusterRef) DeepCopy() *ClusterRef {
	if in == nil {
		return nil
	}
	out := new(ClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleRef) DeepCopyInto(out *ClusterRoleRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleRef.
func (in *ClusterRoleRef) DeepCopy() *ClusterRoleRef {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleTemplate) DeepCopyInto(out *ClusterRoleTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleTemplate.
func (in *ClusterRoleTemplate) DeepCopy() *ClusterRoleTemplate {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRoleTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleTemplateList) DeepCopyInto(out *ClusterRoleTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterRoleTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleTemplateList.
func (in *ClusterRoleTemplateList) DeepCopy() *ClusterRoleTemplateList {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterRoleTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleTemplateSpec) DeepCopyInto(out *ClusterRoleTemplateSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.ClusterRoleTemplate.DeepCopyInto(&out.ClusterRoleTemplate)
	if in.LocalClusterRoleTemplate != nil {
		in, out := &in.LocalClusterRoleTemplate, &out.LocalClusterRoleTemplate
		*out = new(LocalClusterRoleTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleTemplateSpec.
func (in *ClusterRoleTemplateSpec) DeepCopy() *ClusterRoleTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleTemplateStatus) DeepCopyInto(out *ClusterRoleTemplateStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleTemplateStatus.
func (in *ClusterRoleTemplateStatus) DeepCopy() *ClusterRoleTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterRoleTemplateTemplate) DeepCopyInto(out *ClusterRoleTemplateTemplate) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]rbacv1.PolicyRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AggregationRule != nil {
		in, out := &in.AggregationRule, &out.AggregationRule
		*out = new(rbacv1.AggregationRule)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterRoleTemplateTemplate.
func (in *ClusterRoleTemplateTemplate) DeepCopy() *ClusterRoleTemplateTemplate {
	if in == nil {
		return nil
	}
	out := new(ClusterRoleTemplateTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	out.Config = in.Config
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = new(Metrics)
		(*in).DeepCopyInto(*out)
	}
	if in.OpenCost != nil {
		in, out := &in.OpenCost, &out.OpenCost
		*out = new(OpenCost)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntityInfo) DeepCopyInto(out *EntityInfo) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntityInfo.
func (in *EntityInfo) DeepCopy() *EntityInfo {
	if in == nil {
		return nil
	}
	out := new(EntityInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupResources) DeepCopyInto(out *GroupResources) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ResourceNames != nil {
		in, out := &in.ResourceNames, &out.ResourceNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupResources.
func (in *GroupResources) DeepCopy() *GroupResources {
	if in == nil {
		return nil
	}
	out := new(GroupResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmChart) DeepCopyInto(out *HelmChart) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Repository = in.Repository
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmChart.
func (in *HelmChart) DeepCopy() *HelmChart {
	if in == nil {
		return nil
	}
	out := new(HelmChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmChartRepository) DeepCopyInto(out *HelmChartRepository) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmChartRepository.
func (in *HelmChartRepository) DeepCopy() *HelmChartRepository {
	if in == nil {
		return nil
	}
	out := new(HelmChartRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmConfiguration) DeepCopyInto(out *HelmConfiguration) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmConfiguration.
func (in *HelmConfiguration) DeepCopy() *HelmConfiguration {
	if in == nil {
		return nil
	}
	out := new(HelmConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmTask) DeepCopyInto(out *HelmTask) {
	*out = *in
	in.Release.DeepCopyInto(&out.Release)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmTask.
func (in *HelmTask) DeepCopy() *HelmTask {
	if in == nil {
		return nil
	}
	out := new(HelmTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmTaskRelease) DeepCopyInto(out *HelmTaskRelease) {
	*out = *in
	in.Config.DeepCopyInto(&out.Config)
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmTaskRelease.
func (in *HelmTaskRelease) DeepCopy() *HelmTaskRelease {
	if in == nil {
		return nil
	}
	out := new(HelmTaskRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImportVirtualClustersSpec) DeepCopyInto(out *ImportVirtualClustersSpec) {
	*out = *in
	if in.RoleMapping != nil {
		in, out := &in.RoleMapping, &out.RoleMapping
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImportVirtualClustersSpec.
func (in *ImportVirtualClustersSpec) DeepCopy() *ImportVirtualClustersSpec {
	if in == nil {
		return nil
	}
	out := new(ImportVirtualClustersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAccess) DeepCopyInto(out *InstanceAccess) {
	*out = *in
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]InstanceAccessRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAccess.
func (in *InstanceAccess) DeepCopy() *InstanceAccess {
	if in == nil {
		return nil
	}
	out := new(InstanceAccess)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceAccessRule) DeepCopyInto(out *InstanceAccessRule) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceAccessRule.
func (in *InstanceAccessRule) DeepCopy() *InstanceAccessRule {
	if in == nil {
		return nil
	}
	out := new(InstanceAccessRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDeployedAppStatus) DeepCopyInto(out *InstanceDeployedAppStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDeployedAppStatus.
func (in *InstanceDeployedAppStatus) DeepCopy() *InstanceDeployedAppStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceDeployedAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KindSecretRef) DeepCopyInto(out *KindSecretRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KindSecretRef.
func (in *KindSecretRef) DeepCopy() *KindSecretRef {
	if in == nil {
		return nil
	}
	out := new(KindSecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KubeVirtNodeTypeSpec) DeepCopyInto(out *KubeVirtNodeTypeSpec) {
	*out = *in
	in.NamedNodeTypeSpec.DeepCopyInto(&out.NamedNodeTypeSpec)
	if in.VirtualMachineTemplate != nil {
		in, out := &in.VirtualMachineTemplate, &out.VirtualMachineTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.MergeVirtualMachineTemplate != nil {
		in, out := &in.MergeVirtualMachineTemplate, &out.MergeVirtualMachineTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KubeVirtNodeTypeSpec.
func (in *KubeVirtNodeTypeSpec) DeepCopy() *KubeVirtNodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(KubeVirtNodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalClusterAccessSpec) DeepCopyInto(out *LocalClusterAccessSpec) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]UserOrTeam, len(*in))
		copy(*out, *in)
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClusterRoles != nil {
		in, out := &in.ClusterRoles, &out.ClusterRoles
		*out = make([]ClusterRoleRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalClusterAccessSpec.
func (in *LocalClusterAccessSpec) DeepCopy() *LocalClusterAccessSpec {
	if in == nil {
		return nil
	}
	out := new(LocalClusterAccessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalClusterAccessTemplate) DeepCopyInto(out *LocalClusterAccessTemplate) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.LocalClusterAccessSpec.DeepCopyInto(&out.LocalClusterAccessSpec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalClusterAccessTemplate.
func (in *LocalClusterAccessTemplate) DeepCopy() *LocalClusterAccessTemplate {
	if in == nil {
		return nil
	}
	out := new(LocalClusterAccessTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalClusterRoleTemplate) DeepCopyInto(out *LocalClusterRoleTemplate) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.LocalClusterRoleTemplateSpec.DeepCopyInto(&out.LocalClusterRoleTemplateSpec)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalClusterRoleTemplate.
func (in *LocalClusterRoleTemplate) DeepCopy() *LocalClusterRoleTemplate {
	if in == nil {
		return nil
	}
	out := new(LocalClusterRoleTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalClusterRoleTemplateSpec) DeepCopyInto(out *LocalClusterRoleTemplateSpec) {
	*out = *in
	in.ClusterRoleTemplate.DeepCopyInto(&out.ClusterRoleTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalClusterRoleTemplateSpec.
func (in *LocalClusterRoleTemplateSpec) DeepCopy() *LocalClusterRoleTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(LocalClusterRoleTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedNodeTypeObjectMeta) DeepCopyInto(out *ManagedNodeTypeObjectMeta) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedNodeTypeObjectMeta.
func (in *ManagedNodeTypeObjectMeta) DeepCopy() *ManagedNodeTypeObjectMeta {
	if in == nil {
		return nil
	}
	out := new(ManagedNodeTypeObjectMeta)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Member) DeepCopyInto(out *Member) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Member.
func (in *Member) DeepCopy() *Member {
	if in == nil {
		return nil
	}
	out := new(Member)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metrics) DeepCopyInto(out *Metrics) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	in.Storage.DeepCopyInto(&out.Storage)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metrics.
func (in *Metrics) DeepCopy() *Metrics {
	if in == nil {
		return nil
	}
	out := new(Metrics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedNodeTypeSpec) DeepCopyInto(out *NamedNodeTypeSpec) {
	*out = *in
	in.NodeTypeSpec.DeepCopyInto(&out.NodeTypeSpec)
	in.Metadata.DeepCopyInto(&out.Metadata)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedNodeTypeSpec.
func (in *NamedNodeTypeSpec) DeepCopy() *NamedNodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(NamedNodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacePattern) DeepCopyInto(out *NamespacePattern) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacePattern.
func (in *NamespacePattern) DeepCopy() *NamespacePattern {
	if in == nil {
		return nil
	}
	out := new(NamespacePattern)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamespacedRef) DeepCopyInto(out *NamespacedRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamespacedRef.
func (in *NamespacedRef) DeepCopy() *NamespacedRef {
	if in == nil {
		return nil
	}
	out := new(NamespacedRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeer) DeepCopyInto(out *NetworkPeer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeer.
func (in *NetworkPeer) DeepCopy() *NetworkPeer {
	if in == nil {
		return nil
	}
	out := new(NetworkPeer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeerList) DeepCopyInto(out *NetworkPeerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkPeer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeerList.
func (in *NetworkPeerList) DeepCopy() *NetworkPeerList {
	if in == nil {
		return nil
	}
	out := new(NetworkPeerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkPeerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeerSpec) DeepCopyInto(out *NetworkPeerSpec) {
	*out = *in
	if in.Addresses != nil {
		in, out := &in.Addresses, &out.Addresses
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AllowedIPs != nil {
		in, out := &in.AllowedIPs, &out.AllowedIPs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeerSpec.
func (in *NetworkPeerSpec) DeepCopy() *NetworkPeerSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkPeerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPeerStatus) DeepCopyInto(out *NetworkPeerStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPeerStatus.
func (in *NetworkPeerStatus) DeepCopy() *NetworkPeerStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkPeerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeClaim) DeepCopyInto(out *NodeClaim) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeClaim.
func (in *NodeClaim) DeepCopy() *NodeClaim {
	if in == nil {
		return nil
	}
	out := new(NodeClaim)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeClaim) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeClaimList) DeepCopyInto(out *NodeClaimList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeClaim, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeClaimList.
func (in *NodeClaimList) DeepCopy() *NodeClaimList {
	if in == nil {
		return nil
	}
	out := new(NodeClaimList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeClaimList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeClaimSpec) DeepCopyInto(out *NodeClaimSpec) {
	*out = *in
	if in.Taints != nil {
		in, out := &in.Taints, &out.Taints
		*out = make([]corev1.Taint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.StartupTaints != nil {
		in, out := &in.StartupTaints, &out.StartupTaints
		*out = make([]corev1.Taint, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KubeletArgs != nil {
		in, out := &in.KubeletArgs, &out.KubeletArgs
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DesiredCapacity != nil {
		in, out := &in.DesiredCapacity, &out.DesiredCapacity
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = make([]corev1.NodeSelectorRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeClaimSpec.
func (in *NodeClaimSpec) DeepCopy() *NodeClaimSpec {
	if in == nil {
		return nil
	}
	out := new(NodeClaimSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeClaimStatus) DeepCopyInto(out *NodeClaimStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeClaimStatus.
func (in *NodeClaimStatus) DeepCopy() *NodeClaimStatus {
	if in == nil {
		return nil
	}
	out := new(NodeClaimStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeEnvironment) DeepCopyInto(out *NodeEnvironment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeEnvironment.
func (in *NodeEnvironment) DeepCopy() *NodeEnvironment {
	if in == nil {
		return nil
	}
	out := new(NodeEnvironment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeEnvironment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeEnvironmentList) DeepCopyInto(out *NodeEnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeEnvironment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeEnvironmentList.
func (in *NodeEnvironmentList) DeepCopy() *NodeEnvironmentList {
	if in == nil {
		return nil
	}
	out := new(NodeEnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeEnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeEnvironmentSpec) DeepCopyInto(out *NodeEnvironmentSpec) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeEnvironmentSpec.
func (in *NodeEnvironmentSpec) DeepCopy() *NodeEnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(NodeEnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeEnvironmentStatus) DeepCopyInto(out *NodeEnvironmentStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeEnvironmentStatus.
func (in *NodeEnvironmentStatus) DeepCopy() *NodeEnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(NodeEnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProvider) DeepCopyInto(out *NodeProvider) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProvider.
func (in *NodeProvider) DeepCopy() *NodeProvider {
	if in == nil {
		return nil
	}
	out := new(NodeProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeProvider) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderBCM) DeepCopyInto(out *NodeProviderBCM) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(NamespacedRef)
		**out = **in
	}
	if in.NodeTypes != nil {
		in, out := &in.NodeTypes, &out.NodeTypes
		*out = make([]BCMNodeTypeSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderBCM.
func (in *NodeProviderBCM) DeepCopy() *NodeProviderBCM {
	if in == nil {
		return nil
	}
	out := new(NodeProviderBCM)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderClusterAPI) DeepCopyInto(out *NodeProviderClusterAPI) {
	*out = *in
	in.ClusterAPIObjects.DeepCopyInto(&out.ClusterAPIObjects)
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(NodeProviderClusterRef)
		**out = **in
	}
	if in.NodeTypes != nil {
		in, out := &in.NodeTypes, &out.NodeTypes
		*out = make([]ClusterAPINodeTypeSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderClusterAPI.
func (in *NodeProviderClusterAPI) DeepCopy() *NodeProviderClusterAPI {
	if in == nil {
		return nil
	}
	out := new(NodeProviderClusterAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderClusterRef) DeepCopyInto(out *NodeProviderClusterRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderClusterRef.
func (in *NodeProviderClusterRef) DeepCopy() *NodeProviderClusterRef {
	if in == nil {
		return nil
	}
	out := new(NodeProviderClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderKubeVirt) DeepCopyInto(out *NodeProviderKubeVirt) {
	*out = *in
	if in.ClusterRef != nil {
		in, out := &in.ClusterRef, &out.ClusterRef
		*out = new(NodeProviderClusterRef)
		**out = **in
	}
	if in.VirtualMachineTemplate != nil {
		in, out := &in.VirtualMachineTemplate, &out.VirtualMachineTemplate
		*out = new(runtime.RawExtension)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeTypes != nil {
		in, out := &in.NodeTypes, &out.NodeTypes
		*out = make([]KubeVirtNodeTypeSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderKubeVirt.
func (in *NodeProviderKubeVirt) DeepCopy() *NodeProviderKubeVirt {
	if in == nil {
		return nil
	}
	out := new(NodeProviderKubeVirt)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderList) DeepCopyInto(out *NodeProviderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeProvider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderList.
func (in *NodeProviderList) DeepCopy() *NodeProviderList {
	if in == nil {
		return nil
	}
	out := new(NodeProviderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeProviderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderSpec) DeepCopyInto(out *NodeProviderSpec) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BCM != nil {
		in, out := &in.BCM, &out.BCM
		*out = new(NodeProviderBCM)
		(*in).DeepCopyInto(*out)
	}
	if in.KubeVirt != nil {
		in, out := &in.KubeVirt, &out.KubeVirt
		*out = new(NodeProviderKubeVirt)
		(*in).DeepCopyInto(*out)
	}
	if in.Terraform != nil {
		in, out := &in.Terraform, &out.Terraform
		*out = new(NodeProviderTerraform)
		(*in).DeepCopyInto(*out)
	}
	if in.ClusterAPI != nil {
		in, out := &in.ClusterAPI, &out.ClusterAPI
		*out = new(NodeProviderClusterAPI)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderSpec.
func (in *NodeProviderSpec) DeepCopy() *NodeProviderSpec {
	if in == nil {
		return nil
	}
	out := new(NodeProviderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderStatus) DeepCopyInto(out *NodeProviderStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderStatus.
func (in *NodeProviderStatus) DeepCopy() *NodeProviderStatus {
	if in == nil {
		return nil
	}
	out := new(NodeProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeProviderTerraform) DeepCopyInto(out *NodeProviderTerraform) {
	*out = *in
	if in.NodeTemplate != nil {
		in, out := &in.NodeTemplate, &out.NodeTemplate
		*out = new(TerraformTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeEnvironmentTemplate != nil {
		in, out := &in.NodeEnvironmentTemplate, &out.NodeEnvironmentTemplate
		*out = new(TerraformNodeEnvironmentTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.NodeTypes != nil {
		in, out := &in.NodeTypes, &out.NodeTypes
		*out = make([]TerraformNodeTypeSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeProviderTerraform.
func (in *NodeProviderTerraform) DeepCopy() *NodeProviderTerraform {
	if in == nil {
		return nil
	}
	out := new(NodeProviderTerraform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeType) DeepCopyInto(out *NodeType) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeType.
func (in *NodeType) DeepCopy() *NodeType {
	if in == nil {
		return nil
	}
	out := new(NodeType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeType) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeCapacity) DeepCopyInto(out *NodeTypeCapacity) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeCapacity.
func (in *NodeTypeCapacity) DeepCopy() *NodeTypeCapacity {
	if in == nil {
		return nil
	}
	out := new(NodeTypeCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeList) DeepCopyInto(out *NodeTypeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeType, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeList.
func (in *NodeTypeList) DeepCopy() *NodeTypeList {
	if in == nil {
		return nil
	}
	out := new(NodeTypeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeTypeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeOverhead) DeepCopyInto(out *NodeTypeOverhead) {
	*out = *in
	if in.KubeReserved != nil {
		in, out := &in.KubeReserved, &out.KubeReserved
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeOverhead.
func (in *NodeTypeOverhead) DeepCopy() *NodeTypeOverhead {
	if in == nil {
		return nil
	}
	out := new(NodeTypeOverhead)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeSpec) DeepCopyInto(out *NodeTypeSpec) {
	*out = *in
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make(corev1.ResourceList, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
	if in.Overhead != nil {
		in, out := &in.Overhead, &out.Overhead
		*out = new(NodeTypeOverhead)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeSpec.
func (in *NodeTypeSpec) DeepCopy() *NodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(NodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeTypeStatus) DeepCopyInto(out *NodeTypeStatus) {
	*out = *in
	out.Capacity = in.Capacity
	if in.Requirements != nil {
		in, out := &in.Requirements, &out.Requirements
		*out = make([]corev1.NodeSelectorRequirement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeTypeStatus.
func (in *NodeTypeStatus) DeepCopy() *NodeTypeStatus {
	if in == nil {
		return nil
	}
	out := new(NodeTypeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObjectsStatus) DeepCopyInto(out *ObjectsStatus) {
	*out = *in
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]ChartStatus, len(*in))
		copy(*out, *in)
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]AppReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObjectsStatus.
func (in *ObjectsStatus) DeepCopy() *ObjectsStatus {
	if in == nil {
		return nil
	}
	out := new(ObjectsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OpenCost) DeepCopyInto(out *OpenCost) {
	*out = *in
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(corev1.ResourceRequirements)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OpenCost.
func (in *OpenCost) DeepCopy() *OpenCost {
	if in == nil {
		return nil
	}
	out := new(OpenCost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelector) DeepCopyInto(out *PodSelector) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelector.
func (in *PodSelector) DeepCopy() *PodSelector {
	if in == nil {
		return nil
	}
	out := new(PodSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	in.Quotas.DeepCopyInto(&out.Quotas)
	if in.AllowedClusters != nil {
		in, out := &in.AllowedClusters, &out.AllowedClusters
		*out = make([]AllowedCluster, len(*in))
		copy(*out, *in)
	}
	if in.AllowedRunners != nil {
		in, out := &in.AllowedRunners, &out.AllowedRunners
		*out = make([]AllowedRunner, len(*in))
		copy(*out, *in)
	}
	if in.AllowedTemplates != nil {
		in, out := &in.AllowedTemplates, &out.AllowedTemplates
		*out = make([]AllowedTemplate, len(*in))
		copy(*out, *in)
	}
	out.RequireTemplate = in.RequireTemplate
	out.RequirePreset = in.RequirePreset
	if in.Members != nil {
		in, out := &in.Members, &out.Members
		*out = make([]Member, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NamespacePattern != nil {
		in, out := &in.NamespacePattern, &out.NamespacePattern
		*out = new(NamespacePattern)
		**out = **in
	}
	if in.ArgoIntegration != nil {
		in, out := &in.ArgoIntegration, &out.ArgoIntegration
		*out = new(ArgoIntegrationSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.VaultIntegration != nil {
		in, out := &in.VaultIntegration, &out.VaultIntegration
		*out = new(VaultIntegrationSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.RancherIntegration != nil {
		in, out := &in.RancherIntegration, &out.RancherIntegration
		*out = new(RancherIntegrationSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	if in.Quotas != nil {
		in, out := &in.Quotas, &out.Quotas
		*out = new(QuotaStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaStatus) DeepCopyInto(out *QuotaStatus) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = new(QuotaStatusProject)
		(*in).DeepCopyInto(*out)
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(QuotaStatusUser)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaStatus.
func (in *QuotaStatus) DeepCopy() *QuotaStatus {
	if in == nil {
		return nil
	}
	out := new(QuotaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaStatusProject) DeepCopyInto(out *QuotaStatusProject) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Used != nil {
		in, out := &in.Used, &out.Used
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make(map[string]QuotaStatusProjectCluster, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaStatusProject.
func (in *QuotaStatusProject) DeepCopy() *QuotaStatusProject {
	if in == nil {
		return nil
	}
	out := new(QuotaStatusProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaStatusProjectCluster) DeepCopyInto(out *QuotaStatusProjectCluster) {
	*out = *in
	if in.Used != nil {
		in, out := &in.Used, &out.Used
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaStatusProjectCluster.
func (in *QuotaStatusProjectCluster) DeepCopy() *QuotaStatusProjectCluster {
	if in == nil {
		return nil
	}
	out := new(QuotaStatusProjectCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaStatusUser) DeepCopyInto(out *QuotaStatusUser) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	in.Used.DeepCopyInto(&out.Used)
	if in.Clusters != nil {
		in, out := &in.Clusters, &out.Clusters
		*out = make(map[string]QuotaStatusUserUsed, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaStatusUser.
func (in *QuotaStatusUser) DeepCopy() *QuotaStatusUser {
	if in == nil {
		return nil
	}
	out := new(QuotaStatusUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaStatusUserUsed) DeepCopyInto(out *QuotaStatusUserUsed) {
	*out = *in
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make(map[string]map[string]string, len(*in))
		for key, val := range *in {
			var outVal map[string]string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make(map[string]map[string]string, len(*in))
		for key, val := range *in {
			var outVal map[string]string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make(map[string]string, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaStatusUserUsed.
func (in *QuotaStatusUserUsed) DeepCopy() *QuotaStatusUserUsed {
	if in == nil {
		return nil
	}
	out := new(QuotaStatusUserUsed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Quotas) DeepCopyInto(out *Quotas) {
	*out = *in
	if in.Project != nil {
		in, out := &in.Project, &out.Project
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Quotas.
func (in *Quotas) DeepCopy() *Quotas {
	if in == nil {
		return nil
	}
	out := new(Quotas)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RancherIntegrationSpec) DeepCopyInto(out *RancherIntegrationSpec) {
	*out = *in
	out.ProjectRef = in.ProjectRef
	in.ImportVirtualClusters.DeepCopyInto(&out.ImportVirtualClusters)
	in.SyncMembers.DeepCopyInto(&out.SyncMembers)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RancherIntegrationSpec.
func (in *RancherIntegrationSpec) DeepCopy() *RancherIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(RancherIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RancherProjectRef) DeepCopyInto(out *RancherProjectRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RancherProjectRef.
func (in *RancherProjectRef) DeepCopy() *RancherProjectRef {
	if in == nil {
		return nil
	}
	out := new(RancherProjectRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequirePreset) DeepCopyInto(out *RequirePreset) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequirePreset.
func (in *RequirePreset) DeepCopy() *RequirePreset {
	if in == nil {
		return nil
	}
	out := new(RequirePreset)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequireTemplate) DeepCopyInto(out *RequireTemplate) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequireTemplate.
func (in *RequireTemplate) DeepCopy() *RequireTemplate {
	if in == nil {
		return nil
	}
	out := new(RequireTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSOIdentity) DeepCopyInto(out *SSOIdentity) {
	*out = *in
	if in.ExtraClaims != nil {
		in, out := &in.ExtraClaims, &out.ExtraClaims
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConnectorData != nil {
		in, out := &in.ConnectorData, &out.ConnectorData
		*out = make([]byte, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSOIdentity.
func (in *SSOIdentity) DeepCopy() *SSOIdentity {
	if in == nil {
		return nil
	}
	out := new(SSOIdentity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRef) DeepCopyInto(out *SecretRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRef.
func (in *SecretRef) DeepCopy() *SecretRef {
	if in == nil {
		return nil
	}
	out := new(SecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedSecret) DeepCopyInto(out *SharedSecret) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedSecret.
func (in *SharedSecret) DeepCopy() *SharedSecret {
	if in == nil {
		return nil
	}
	out := new(SharedSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedSecret) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedSecretList) DeepCopyInto(out *SharedSecretList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SharedSecret, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedSecretList.
func (in *SharedSecretList) DeepCopy() *SharedSecretList {
	if in == nil {
		return nil
	}
	out := new(SharedSecretList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SharedSecretList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedSecretSpec) DeepCopyInto(out *SharedSecretSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Data != nil {
		in, out := &in.Data, &out.Data
		*out = make(map[string][]byte, len(*in))
		for key, val := range *in {
			var outVal []byte
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]byte, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedSecretSpec.
func (in *SharedSecretSpec) DeepCopy() *SharedSecretSpec {
	if in == nil {
		return nil
	}
	out := new(SharedSecretSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SharedSecretStatus) DeepCopyInto(out *SharedSecretStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SharedSecretStatus.
func (in *SharedSecretStatus) DeepCopy() *SharedSecretStatus {
	if in == nil {
		return nil
	}
	out := new(SharedSecretStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceInstance) DeepCopyInto(out *SpaceInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceInstance.
func (in *SpaceInstance) DeepCopy() *SpaceInstance {
	if in == nil {
		return nil
	}
	out := new(SpaceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceInstanceList) DeepCopyInto(out *SpaceInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpaceInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceInstanceList.
func (in *SpaceInstanceList) DeepCopy() *SpaceInstanceList {
	if in == nil {
		return nil
	}
	out := new(SpaceInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceInstanceSpec) DeepCopyInto(out *SpaceInstanceSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.TemplateRef != nil {
		in, out := &in.TemplateRef, &out.TemplateRef
		*out = new(TemplateRef)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(SpaceTemplateDefinition)
		(*in).DeepCopyInto(*out)
	}
	out.ClusterRef = in.ClusterRef
	if in.ExtraAccessRules != nil {
		in, out := &in.ExtraAccessRules, &out.ExtraAccessRules
		*out = make([]InstanceAccessRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceInstanceSpec.
func (in *SpaceInstanceSpec) DeepCopy() *SpaceInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceInstanceStatus) DeepCopyInto(out *SpaceInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpaceObjects != nil {
		in, out := &in.SpaceObjects, &out.SpaceObjects
		*out = new(ObjectsStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.Space != nil {
		in, out := &in.Space, &out.Space
		*out = new(SpaceTemplateDefinition)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceInstanceStatus.
func (in *SpaceInstanceStatus) DeepCopy() *SpaceInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceInstanceTemplateDefinition) DeepCopyInto(out *SpaceInstanceTemplateDefinition) {
	*out = *in
	in.TemplateMetadata.DeepCopyInto(&out.TemplateMetadata)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceInstanceTemplateDefinition.
func (in *SpaceInstanceTemplateDefinition) DeepCopy() *SpaceInstanceTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(SpaceInstanceTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplate) DeepCopyInto(out *SpaceTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplate.
func (in *SpaceTemplate) DeepCopy() *SpaceTemplate {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplateDefinition) DeepCopyInto(out *SpaceTemplateDefinition) {
	*out = *in
	in.TemplateMetadata.DeepCopyInto(&out.TemplateMetadata)
	in.InstanceTemplate.DeepCopyInto(&out.InstanceTemplate)
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]TemplateHelmChart, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]AppReference, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(InstanceAccess)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplateDefinition.
func (in *SpaceTemplateDefinition) DeepCopy() *SpaceTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplateList) DeepCopyInto(out *SpaceTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SpaceTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplateList.
func (in *SpaceTemplateList) DeepCopy() *SpaceTemplateList {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SpaceTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplateSpec) DeepCopyInto(out *SpaceTemplateSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	in.Template.DeepCopyInto(&out.Template)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]AppParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]SpaceTemplateVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplateSpec.
func (in *SpaceTemplateSpec) DeepCopy() *SpaceTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplateStatus) DeepCopyInto(out *SpaceTemplateStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplateStatus.
func (in *SpaceTemplateStatus) DeepCopy() *SpaceTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SpaceTemplateVersion) DeepCopyInto(out *SpaceTemplateVersion) {
	*out = *in
	in.Template.DeepCopyInto(&out.Template)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]AppParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SpaceTemplateVersion.
func (in *SpaceTemplateVersion) DeepCopy() *SpaceTemplateVersion {
	if in == nil {
		return nil
	}
	out := new(SpaceTemplateVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StreamContainer) DeepCopyInto(out *StreamContainer) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StreamContainer.
func (in *StreamContainer) DeepCopy() *StreamContainer {
	if in == nil {
		return nil
	}
	out := new(StreamContainer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncMembersSpec) DeepCopyInto(out *SyncMembersSpec) {
	*out = *in
	if in.RoleMapping != nil {
		in, out := &in.RoleMapping, &out.RoleMapping
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncMembersSpec.
func (in *SyncMembersSpec) DeepCopy() *SyncMembersSpec {
	if in == nil {
		return nil
	}
	out := new(SyncMembersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Target) DeepCopyInto(out *Target) {
	*out = *in
	if in.SpaceInstance != nil {
		in, out := &in.SpaceInstance, &out.SpaceInstance
		*out = new(TargetInstance)
		**out = **in
	}
	if in.VirtualClusterInstance != nil {
		in, out := &in.VirtualClusterInstance, &out.VirtualClusterInstance
		*out = new(TargetInstance)
		**out = **in
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = new(TargetCluster)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Target.
func (in *Target) DeepCopy() *Target {
	if in == nil {
		return nil
	}
	out := new(Target)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetCluster) DeepCopyInto(out *TargetCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetCluster.
func (in *TargetCluster) DeepCopy() *TargetCluster {
	if in == nil {
		return nil
	}
	out := new(TargetCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInstance) DeepCopyInto(out *TargetInstance) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInstance.
func (in *TargetInstance) DeepCopy() *TargetInstance {
	if in == nil {
		return nil
	}
	out := new(TargetInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetVirtualCluster) DeepCopyInto(out *TargetVirtualCluster) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetVirtualCluster.
func (in *TargetVirtualCluster) DeepCopy() *TargetVirtualCluster {
	if in == nil {
		return nil
	}
	out := new(TargetVirtualCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Task) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskDefinition) DeepCopyInto(out *TaskDefinition) {
	*out = *in
	if in.AppTask != nil {
		in, out := &in.AppTask, &out.AppTask
		*out = new(AppTask)
		**out = **in
	}
	if in.HelmTask != nil {
		in, out := &in.HelmTask, &out.HelmTask
		*out = new(HelmTask)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskDefinition.
func (in *TaskDefinition) DeepCopy() *TaskDefinition {
	if in == nil {
		return nil
	}
	out := new(TaskDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskList) DeepCopyInto(out *TaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Task, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskList.
func (in *TaskList) DeepCopy() *TaskList {
	if in == nil {
		return nil
	}
	out := new(TaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskSpec) DeepCopyInto(out *TaskSpec) {
	*out = *in
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(AccessKeyScope)
		(*in).DeepCopyInto(*out)
	}
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	in.Target.DeepCopyInto(&out.Target)
	in.Task.DeepCopyInto(&out.Task)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskSpec.
func (in *TaskSpec) DeepCopy() *TaskSpec {
	if in == nil {
		return nil
	}
	out := new(TaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskStatus) DeepCopyInto(out *TaskStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerState != nil {
		in, out := &in.ContainerState, &out.ContainerState
		*out = new(corev1.ContainerStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskStatus.
func (in *TaskStatus) DeepCopy() *TaskStatus {
	if in == nil {
		return nil
	}
	out := new(TaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]*KindSecretRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KindSecretRef)
				**out = **in
			}
		}
	}
	if in.ClusterRoles != nil {
		in, out := &in.ClusterRoles, &out.ClusterRoles
		*out = make([]ClusterRoleRef, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateHelmChart) DeepCopyInto(out *TemplateHelmChart) {
	*out = *in
	in.Chart.DeepCopyInto(&out.Chart)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateHelmChart.
func (in *TemplateHelmChart) DeepCopy() *TemplateHelmChart {
	if in == nil {
		return nil
	}
	out := new(TemplateHelmChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateMetadata) DeepCopyInto(out *TemplateMetadata) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateMetadata.
func (in *TemplateMetadata) DeepCopy() *TemplateMetadata {
	if in == nil {
		return nil
	}
	out := new(TemplateMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateRef) DeepCopyInto(out *TemplateRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateRef.
func (in *TemplateRef) DeepCopy() *TemplateRef {
	if in == nil {
		return nil
	}
	out := new(TemplateRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerraformNodeEnvironmentTemplate) DeepCopyInto(out *TerraformNodeEnvironmentTemplate) {
	*out = *in
	in.TerraformTemplate.DeepCopyInto(&out.TerraformTemplate)
	if in.Infrastructure != nil {
		in, out := &in.Infrastructure, &out.Infrastructure
		*out = new(TerraformTemplate)
		(*in).DeepCopyInto(*out)
	}
	if in.Kubernetes != nil {
		in, out := &in.Kubernetes, &out.Kubernetes
		*out = new(TerraformTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerraformNodeEnvironmentTemplate.
func (in *TerraformNodeEnvironmentTemplate) DeepCopy() *TerraformNodeEnvironmentTemplate {
	if in == nil {
		return nil
	}
	out := new(TerraformNodeEnvironmentTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerraformNodeTypeSpec) DeepCopyInto(out *TerraformNodeTypeSpec) {
	*out = *in
	in.NamedNodeTypeSpec.DeepCopyInto(&out.NamedNodeTypeSpec)
	if in.NodeTemplate != nil {
		in, out := &in.NodeTemplate, &out.NodeTemplate
		*out = new(TerraformTemplate)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerraformNodeTypeSpec.
func (in *TerraformNodeTypeSpec) DeepCopy() *TerraformNodeTypeSpec {
	if in == nil {
		return nil
	}
	out := new(TerraformNodeTypeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerraformTemplate) DeepCopyInto(out *TerraformTemplate) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(TerraformTemplateSourceGit)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerraformTemplate.
func (in *TerraformTemplate) DeepCopy() *TerraformTemplate {
	if in == nil {
		return nil
	}
	out := new(TerraformTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TerraformTemplateSourceGit) DeepCopyInto(out *TerraformTemplateSourceGit) {
	*out = *in
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(SecretRef)
		**out = **in
	}
	if in.ExtraEnv != nil {
		in, out := &in.ExtraEnv, &out.ExtraEnv
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TerraformTemplateSourceGit.
func (in *TerraformTemplateSourceGit) DeepCopy() *TerraformTemplateSourceGit {
	if in == nil {
		return nil
	}
	out := new(TerraformTemplateSourceGit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserOrTeam) DeepCopyInto(out *UserOrTeam) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserOrTeam.
func (in *UserOrTeam) DeepCopy() *UserOrTeam {
	if in == nil {
		return nil
	}
	out := new(UserOrTeam)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserOrTeamEntity) DeepCopyInto(out *UserOrTeamEntity) {
	*out = *in
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(EntityInfo)
		**out = **in
	}
	if in.Team != nil {
		in, out := &in.Team, &out.Team
		*out = new(EntityInfo)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserOrTeamEntity.
func (in *UserOrTeamEntity) DeepCopy() *UserOrTeamEntity {
	if in == nil {
		return nil
	}
	out := new(UserOrTeamEntity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SSOGroups != nil {
		in, out := &in.SSOGroups, &out.SSOGroups
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PasswordRef != nil {
		in, out := &in.PasswordRef, &out.PasswordRef
		*out = new(SecretRef)
		**out = **in
	}
	if in.CodesRef != nil {
		in, out := &in.CodesRef, &out.CodesRef
		*out = new(SecretRef)
		**out = **in
	}
	if in.ImagePullSecrets != nil {
		in, out := &in.ImagePullSecrets, &out.ImagePullSecrets
		*out = make([]*KindSecretRef, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(KindSecretRef)
				**out = **in
			}
		}
	}
	if in.ClusterRoles != nil {
		in, out := &in.ClusterRoles, &out.ClusterRoles
		*out = make([]ClusterRoleRef, len(*in))
		copy(*out, *in)
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExtraClaims != nil {
		in, out := &in.ExtraClaims, &out.ExtraClaims
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultAuthSpec) DeepCopyInto(out *VaultAuthSpec) {
	*out = *in
	if in.Token != nil {
		in, out := &in.Token, &out.Token
		*out = new(string)
		**out = **in
	}
	if in.TokenSecretRef != nil {
		in, out := &in.TokenSecretRef, &out.TokenSecretRef
		*out = new(corev1.SecretKeySelector)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultAuthSpec.
func (in *VaultAuthSpec) DeepCopy() *VaultAuthSpec {
	if in == nil {
		return nil
	}
	out := new(VaultAuthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultIntegrationSpec) DeepCopyInto(out *VaultIntegrationSpec) {
	*out = *in
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(VaultAuthSpec)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultIntegrationSpec.
func (in *VaultIntegrationSpec) DeepCopy() *VaultIntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(VaultIntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterAccessPoint) DeepCopyInto(out *VirtualClusterAccessPoint) {
	*out = *in
	out.Ingress = in.Ingress
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterAccessPoint.
func (in *VirtualClusterAccessPoint) DeepCopy() *VirtualClusterAccessPoint {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterAccessPoint)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterAccessPointIngressSpec) DeepCopyInto(out *VirtualClusterAccessPointIngressSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterAccessPointIngressSpec.
func (in *VirtualClusterAccessPointIngressSpec) DeepCopy() *VirtualClusterAccessPointIngressSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterAccessPointIngressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterClusterRef) DeepCopyInto(out *VirtualClusterClusterRef) {
	*out = *in
	out.ClusterRef = in.ClusterRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterClusterRef.
func (in *VirtualClusterClusterRef) DeepCopy() *VirtualClusterClusterRef {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterClusterRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterCommonSpec) DeepCopyInto(out *VirtualClusterCommonSpec) {
	*out = *in
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]AppReference, len(*in))
		copy(*out, *in)
	}
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]TemplateHelmChart, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = new(InstanceAccess)
		(*in).DeepCopyInto(*out)
	}
	out.Pro = in.Pro
	out.HelmRelease = in.HelmRelease
	out.AccessPoint = in.AccessPoint
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterCommonSpec.
func (in *VirtualClusterCommonSpec) DeepCopy() *VirtualClusterCommonSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterHelmChart) DeepCopyInto(out *VirtualClusterHelmChart) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterHelmChart.
func (in *VirtualClusterHelmChart) DeepCopy() *VirtualClusterHelmChart {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterHelmChart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterHelmRelease) DeepCopyInto(out *VirtualClusterHelmRelease) {
	*out = *in
	out.Chart = in.Chart
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterHelmRelease.
func (in *VirtualClusterHelmRelease) DeepCopy() *VirtualClusterHelmRelease {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterHelmRelease)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterHelmReleaseStatus) DeepCopyInto(out *VirtualClusterHelmReleaseStatus) {
	*out = *in
	in.LastTransitionTime.DeepCopyInto(&out.LastTransitionTime)
	out.Release = in.Release
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterHelmReleaseStatus.
func (in *VirtualClusterHelmReleaseStatus) DeepCopy() *VirtualClusterHelmReleaseStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterHelmReleaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInstance) DeepCopyInto(out *VirtualClusterInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInstance.
func (in *VirtualClusterInstance) DeepCopy() *VirtualClusterInstance {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualClusterInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInstanceList) DeepCopyInto(out *VirtualClusterInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualClusterInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInstanceList.
func (in *VirtualClusterInstanceList) DeepCopy() *VirtualClusterInstanceList {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualClusterInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInstanceSpec) DeepCopyInto(out *VirtualClusterInstanceSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	if in.TemplateRef != nil {
		in, out := &in.TemplateRef, &out.TemplateRef
		*out = new(TemplateRef)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(VirtualClusterTemplateDefinition)
		(*in).DeepCopyInto(*out)
	}
	out.ClusterRef = in.ClusterRef
	if in.ExtraAccessRules != nil {
		in, out := &in.ExtraAccessRules, &out.ExtraAccessRules
		*out = make([]InstanceAccessRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInstanceSpec.
func (in *VirtualClusterInstanceSpec) DeepCopy() *VirtualClusterInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInstanceStatus) DeepCopyInto(out *VirtualClusterInstanceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualClusterObjects != nil {
		in, out := &in.VirtualClusterObjects, &out.VirtualClusterObjects
		*out = new(ObjectsStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.SpaceObjects != nil {
		in, out := &in.SpaceObjects, &out.SpaceObjects
		*out = new(ObjectsStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.VirtualCluster != nil {
		in, out := &in.VirtualCluster, &out.VirtualCluster
		*out = new(VirtualClusterTemplateDefinition)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInstanceStatus.
func (in *VirtualClusterInstanceStatus) DeepCopy() *VirtualClusterInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterInstanceTemplateDefinition) DeepCopyInto(out *VirtualClusterInstanceTemplateDefinition) {
	*out = *in
	in.TemplateMetadata.DeepCopyInto(&out.TemplateMetadata)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterInstanceTemplateDefinition.
func (in *VirtualClusterInstanceTemplateDefinition) DeepCopy() *VirtualClusterInstanceTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterInstanceTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterProSpec) DeepCopyInto(out *VirtualClusterProSpec) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterProSpec.
func (in *VirtualClusterProSpec) DeepCopy() *VirtualClusterProSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterProSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterSpaceTemplateDefinition) DeepCopyInto(out *VirtualClusterSpaceTemplateDefinition) {
	*out = *in
	in.TemplateMetadata.DeepCopyInto(&out.TemplateMetadata)
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]TemplateHelmChart, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Apps != nil {
		in, out := &in.Apps, &out.Apps
		*out = make([]AppReference, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterSpaceTemplateDefinition.
func (in *VirtualClusterSpaceTemplateDefinition) DeepCopy() *VirtualClusterSpaceTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterSpaceTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterStatus) DeepCopyInto(out *VirtualClusterStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(storagev1.Conditions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VirtualClusterObjects != nil {
		in, out := &in.VirtualClusterObjects, &out.VirtualClusterObjects
		*out = new(ObjectsStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.HelmRelease != nil {
		in, out := &in.HelmRelease, &out.HelmRelease
		*out = new(VirtualClusterHelmReleaseStatus)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterStatus.
func (in *VirtualClusterStatus) DeepCopy() *VirtualClusterStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplate) DeepCopyInto(out *VirtualClusterTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplate.
func (in *VirtualClusterTemplate) DeepCopy() *VirtualClusterTemplate {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualClusterTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateDefinition) DeepCopyInto(out *VirtualClusterTemplateDefinition) {
	*out = *in
	in.TemplateMetadata.DeepCopyInto(&out.TemplateMetadata)
	in.InstanceTemplate.DeepCopyInto(&out.InstanceTemplate)
	in.VirtualClusterCommonSpec.DeepCopyInto(&out.VirtualClusterCommonSpec)
	in.SpaceTemplate.DeepCopyInto(&out.SpaceTemplate)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateDefinition.
func (in *VirtualClusterTemplateDefinition) DeepCopy() *VirtualClusterTemplateDefinition {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateList) DeepCopyInto(out *VirtualClusterTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualClusterTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateList.
func (in *VirtualClusterTemplateList) DeepCopy() *VirtualClusterTemplateList {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualClusterTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateSpaceTemplateRef) DeepCopyInto(out *VirtualClusterTemplateSpaceTemplateRef) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateSpaceTemplateRef.
func (in *VirtualClusterTemplateSpaceTemplateRef) DeepCopy() *VirtualClusterTemplateSpaceTemplateRef {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateSpaceTemplateRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateSpec) DeepCopyInto(out *VirtualClusterTemplateSpec) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(UserOrTeam)
		**out = **in
	}
	in.Template.DeepCopyInto(&out.Template)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]AppParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]VirtualClusterTemplateVersion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Access != nil {
		in, out := &in.Access, &out.Access
		*out = make([]Access, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SpaceTemplateRef != nil {
		in, out := &in.SpaceTemplateRef, &out.SpaceTemplateRef
		*out = new(VirtualClusterTemplateSpaceTemplateRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateSpec.
func (in *VirtualClusterTemplateSpec) DeepCopy() *VirtualClusterTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateStatus) DeepCopyInto(out *VirtualClusterTemplateStatus) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateStatus.
func (in *VirtualClusterTemplateStatus) DeepCopy() *VirtualClusterTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualClusterTemplateVersion) DeepCopyInto(out *VirtualClusterTemplateVersion) {
	*out = *in
	in.Template.DeepCopyInto(&out.Template)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]AppParameter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualClusterTemplateVersion.
func (in *VirtualClusterTemplateVersion) DeepCopy() *VirtualClusterTemplateVersion {
	if in == nil {
		return nil
	}
	out := new(VirtualClusterTemplateVersion)
	in.DeepCopyInto(out)
	return out
}
