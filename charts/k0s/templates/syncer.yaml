{{- if not .Values.headless }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: vcluster
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
{{- $annotations := merge .Values.annotations .Values.globalAnnotations }}
  {{- if $annotations }}
  annotations:
{{ toYaml $annotations | indent 4 }}
  {{- end }}
spec:
  serviceName: {{ .Release.Name }}-headless
  {{- if .Values.autoDeletePersistentVolumeClaims }}
  {{- if ge (int .Capabilities.KubeVersion.Minor) 27 }}
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Delete
  {{- end }}
  {{- end }}
  replicas: {{ include "vcluster.replicas" . }}
  selector:
    matchLabels:
      app: vcluster
      release: {{ .Release.Name }}
  {{- if (hasKey .Values "volumeClaimTemplates") }}
  volumeClaimTemplates:
{{ toYaml .Values.volumeClaimTemplates | indent 4 }}
  {{- else if ( eq ( include "vcluster.storage.persistence" . ) "true" ) }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        {{- if (include "vcluster.storage.className" . ) }}
        storageClassName: {{ include "vcluster.storage.className" . }}
        {{- end }}
        resources:
          requests:
            storage: {{ include "vcluster.storage.size" . }}
  {{- end }}
  template:
    metadata:
  {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
      labels:
        app: vcluster
        release: {{ .Release.Name }}
      {{- range $k, $v := .Values.podLabels }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: 10
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- else }}
      serviceAccountName: vc-{{ .Release.Name }}
      {{- end }}
      volumes:
      {{- include "vcluster.plugins.volumes" . | indent 8 }}
        - name: helm-cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: run-k0s
          emptyDir: {}
        - name: binaries
          emptyDir: {}
      {{- if .Values.syncer.volumes }}
{{ toYaml .Values.syncer.volumes | indent 8 }}
      {{- end }}
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
      {{- end }}
      {{- if and .Values.coredns.enabled (not .Values.coredns.integrated) }}
        - name: coredns
          configMap:
            name: {{ .Release.Name }}-coredns
      {{- else if .Values.coredns.integrated }}
        - name: coredns
          configMap:
            name: {{ .Release.Name }}-dns
      {{- end }}
        - name: custom-config-volume
          configMap:
            name: coredns-custom
            optional: true
      {{- if not (eq ( include "vcluster.storage.persistence" . ) "true" ) }}
        - name: data
          emptyDir: {}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if or .Values.podSecurityContext .Values.fsGroup }}
      {{- $fsContext := dict "fsGroup" .Values.fsGroup }}
      {{- with merge .Values.podSecurityContext $fsContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- end }}
      initContainers:
      {{- include "vcluster.plugins.initContainers" . | indent 6 }}
      - image: {{ .Values.defaultImageRegistry }}{{ .Values.vcluster.image }}
        name: vcluster
        command:
          - /bin/sh
        args:
          - -c
          - "cp /usr/local/bin/k0s /binaries/k0s"
        {{- if .Values.vcluster.imagePullPolicy }}
        imagePullPolicy: {{ .Values.vcluster.imagePullPolicy }}
        {{- end }}
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        volumeMounts:
          - name: binaries
            mountPath: /binaries
      containers:
      {{- if not .Values.syncer.disabled }}
      - name: syncer
        {{- if .Values.syncer.image }}
        image: "{{ .Values.defaultImageRegistry }}{{ .Values.syncer.image }}"
        {{- else }}
        {{- if .Values.pro }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster-pro:{{ .Chart.Version }}"
        {{- else }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster:{{ .Chart.Version }}"
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.workingDir }}
        workingDir: {{ .Values.syncer.workingDir }}
        {{- end }}
        {{- if .Values.syncer.command }}
        command:
        {{- range $f := .Values.syncer.command }}
        - {{ $f | quote }}
        {{- end }}
        {{- end }}
        args:
          - --service-account=vc-workload-{{ .Release.Name }}
          - --request-header-ca-cert=/data/k0s/pki/front-proxy-ca.crt
          - --client-ca-cert=/data/k0s/pki/ca.crt
          - --server-ca-cert=/data/k0s/pki/ca.crt
          - --server-ca-key=/data/k0s/pki/ca.key
          - --kube-config=/data/k0s/pki/admin.conf
          {{- if and .Values.embeddedEtcd.enabled .Values.pro }}
          - --etcd-embedded
          - --etcd-replicas={{ .Values.syncer.replicas }}
          {{- end }}
          {{- if (gt (int .Values.syncer.replicas ) 1) }}
          - --leader-elect=true
          {{- else }}
          - --leader-elect=false
          {{- end }}
          {{- include "vcluster.legacyPlugins.args" . | indent 10 }}
          {{- include "vcluster.serviceMapping.fromHost" . | indent 10 }}
          {{- include "vcluster.serviceMapping.fromVirtual" . | indent 10 }}
          {{- if .Values.sync.nodes.enableScheduler }}
          - --enable-scheduler
          {{- end }}
          {{- if .Values.pro }}
          {{- if .Values.proLicenseSecret }}
          - --pro-license-secret={{ .Values.proLicenseSecret }}
          {{- end }}
          {{- end }}
          {{- if .Values.defaultImageRegistry }}
          - --default-image-registry={{ .Values.defaultImageRegistry }}
          {{- end }}
          {{- if .Values.syncer.kubeConfigContextName }}
          - --kube-config-context-name={{ .Values.syncer.kubeConfigContextName }}
          {{- end }}
          {{- if .Values.ingress.enabled }}
          - --tls-san={{ .Values.ingress.host }}
          {{- end }}
          {{- if .Values.isolation.enabled }}
          - --enforce-pod-security-standard={{ .Values.isolation.podSecurityStandard }}
          {{- end}}
          {{- include "vcluster.syncer.syncArgs" . | indent 10 -}}
          {{- if .Values.sync.nodes.syncAllNodes }}
          - --sync-all-nodes
          {{- end }}
          {{- if .Values.sync.nodes.nodeSelector }}
          - --node-selector={{ .Values.sync.nodes.nodeSelector }}
          {{- end }}
          {{- if .Values.multiNamespaceMode.enabled }}
          - --multi-namespace-mode=true
          {{- end }}
          {{- if .Values.sync.configmaps.all }}
          - --sync-all-configmaps=true
          {{- end }}
          {{- if .Values.sync.secrets.all }}
          - --sync-all-secrets=true
          {{- end }}
          {{- if not .Values.sync.nodes.fakeKubeletIPs }}
          - --fake-kubelet-ips=false
          {{- end }}
          {{- if or .Values.proxy.metricsServer.nodes.enabled .Values.proxy.metricsServer.pods.enabled }}
          - --proxy-metrics-server=true
          {{- end }}
          {{- if .Values.coredns.integrated }}
          - --integrated-coredns=true
          {{- end }}
          {{- if and .Values.coredns.integrated .Values.coredns.plugin.enabled }}
          - --use-coredns-plugin=true
          {{- end }}
          {{- if .Values.centralAdmission.validatingWebhooks }}
          {{- range .Values.centralAdmission.validatingWebhooks }}
          - --enforce-validating-hook={{ . | toYaml | b64enc }}
          {{- end }}
          {{- end }}
          {{- if .Values.centralAdmission.mutatingWebhooks }}
          {{- range .Values.centralAdmission.mutatingWebhooks }}
          - --enforce-mutating-hook={{ . | toYaml | b64enc }}
          {{- end }}
          {{- end }}
          {{- range $f := .Values.syncer.extraArgs }}
          - {{ $f | quote }}
          {{- end }}
        {{- if .Values.syncer.livenessProbe }}
        {{- if .Values.syncer.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          failureThreshold: 10
          initialDelaySeconds: 60
          periodSeconds: 2
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.readinessProbe }}
        {{- if .Values.syncer.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          failureThreshold: 30
          periodSeconds: 2
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.imagePullPolicy }}
        imagePullPolicy: {{ .Values.syncer.imagePullPolicy }}
        {{- end }}
        securityContext:
{{ toYaml .Values.securityContext | indent 10 }}
        env:
        {{- include "vcluster.plugins.config" . | indent 10 }}
          - name: VCLUSTER_DISTRO
            value: k0s
          - name: VCLUSTER_NAME
            value: {{ .Release.Name }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        {{- if eq ( ( include "vcluster.replicas" . ) | toString | atoi) 1 }}
          - name: VCLUSTER_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        {{- end }}
          {{- if .Values.vcluster.env }}
{{ toYaml .Values.vcluster.env | indent 10 }}
          {{- end }}
          - name: ETCD_UNSUPPORTED_ARCH
            value: arm64
          - name: VCLUSTER_COMMAND
            value: |-
              command:
                {{- range $f := .Values.vcluster.command }}
                - {{ $f | quote }}
                {{- end }}
              args:
                {{- range $f := .Values.vcluster.baseArgs }}
                - {{ $f | quote }}
                {{- end }}
                - --status-socket=/run/k0s/status.sock
                {{- if not .Values.sync.nodes.enableScheduler }}
                - --disable-components=konnectivity-server,kube-scheduler,csr-approver,kube-proxy,coredns,network-provider,helm,metrics-server,worker-config
                {{- else }}
                - --disable-components=konnectivity-server,csr-approver,kube-proxy,coredns,network-provider,helm,metrics-server,worker-config
                {{- end }}
                {{- range $f := .Values.vcluster.extraArgs }}
                - {{ $f | quote }}
                {{- end }}
        {{- if .Values.syncer.env }}
{{ toYaml .Values.syncer.env | indent 10 }}
        {{- end }}
        {{- if .Values.sync.generic.config }}
          - name: CONFIG
            value: |-
              {{- .Values.sync.generic.config | nindent 14 }}
        {{- end }}
          - name: VCLUSTER_TELEMETRY_CONFIG
            value: {{ .Values.telemetry | toJson | quote }}
        volumeMounts:
        {{- include "vcluster.plugins.volumeMounts" . | indent 10 }}
          - name: helm-cache
            mountPath: /.cache/helm
          - name: binaries
            mountPath: /binaries
          - mountPath: /data
            name: data
          - name: run-k0s
            mountPath: /run/k0s
          - name: tmp
            mountPath: /tmp
        {{- if .Values.coredns.enabled }}
          - name: coredns
            mountPath: /manifests/coredns
            readOnly: true
        {{- end }}
        {{- if .Values.vcluster.volumeMounts }}
{{ toYaml .Values.vcluster.volumeMounts | indent 10 }}
        {{- end }}
        {{- if .Values.syncer.extraVolumeMounts }}
{{ toYaml .Values.syncer.extraVolumeMounts | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.syncer.resources | indent 10 }}
      {{- end }}
{{- include "vcluster.legacyPlugins.containers" . | indent 6 }}
{{- end }}
