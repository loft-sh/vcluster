{{- if not .Values.headless }}
apiVersion: apps/v1
kind: {{ include "vcluster.kind" . }}
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: vcluster
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
{{- if .Values.syncer.labels }}
{{ toYaml .Values.syncer.labels | indent 4 }}
{{- end }}
  {{- $annotations := merge .Values.globalAnnotations .Values.syncer.annotations }}
  {{- if $annotations}}
  annotations:
{{ toYaml $annotations | indent 4 }}
  {{- end }}
spec:
  {{- include "vcluster.deployment.strategy" . | indent 2 }}
  {{- include "vcluster.statefulset.serviceName" . | indent 2 }}
  {{- include "vcluster.statefulset.volumeClaimTemplate" . | indent 2 }}
  replicas: {{ .Values.syncer.replicas }}
  selector:
    matchLabels:
      app: vcluster
      release: {{ .Release.Name }}
  template:
    metadata:
  {{- if .Values.syncer.podAnnotations }}
      annotations:
{{ toYaml .Values.syncer.podAnnotations | indent 8 }}
  {{- end }}
      labels:
        app: vcluster
        release: {{ .Release.Name }}
      {{- range $k, $v := .Values.syncer.podLabels }}
        {{ $k }}: {{ $v | quote }}
      {{- end }}
    spec:
      terminationGracePeriodSeconds: 10
      {{- if .Values.syncer.affinity }}
      affinity:
{{ toYaml .Values.syncer.affinity | indent 8 }}
      {{- else if (gt (int .Values.syncer.replicas) 1) }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          # if possible avoid scheduling more than one pod on one node
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vcluster
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
          # if possible avoid scheduling pod onto node that is in the same zone as one or more vcluster pods are running
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vcluster
                - key: release
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: topology.kubernetes.io/zone
      {{- end }}
      {{- if .Values.syncer.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml .Values.syncer.topologySpreadConstraints | indent 8 }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.syncer.nodeSelector | indent 8 }}
      affinity:
{{ toYaml .Values.syncer.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.syncer.tolerations | indent 8 }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- else }}
      serviceAccountName: vc-{{ .Release.Name }}
      {{- end }}
      {{- if .Values.syncer.podSecurityContext }}
      securityContext:
{{ toYaml .Values.syncer.podSecurityContext | indent 8 }}
      {{- end }}
      volumes:
      {{- include "vcluster.plugins.volumes" . | indent 8 }}
        - name: helm-cache
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: certs
          emptyDir: {}
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8 }}
      {{- end }}
        - name: binaries
          emptyDir: {}
      {{- if .Values.syncer.volumes }}
{{ toYaml .Values.syncer.volumes | indent 8 }}
      {{- end }}
      {{- if and .Values.coredns.enabled (not .Values.coredns.integrated) }}
        - name: coredns
          configMap:
            name: {{ .Release.Name }}-coredns
      {{- else if .Values.coredns.integrated }}
        - name: coredns
          configMap:
            name: {{ .Release.Name }}-dns
      {{- end }}
        - name: custom-config-volume
          configMap:
            name: coredns-custom
            optional: true
      {{- if .Values.syncer.priorityClassName }}
      priorityClassName: {{ .Values.syncer.priorityClassName }}
      {{- end }}
      initContainers:
      {{- include "vcluster.plugins.initContainers" . | indent 6 }}
      # this is needed because the k8s containers are distroless and thus we don't have any
      # way of copying the binaries otherwise
      - name: vcluster-copy
        {{- if .Values.syncer.image }}
        image: "{{ .Values.defaultImageRegistry }}{{ .Values.syncer.image }}"
        {{- else }}
        {{- if .Values.pro }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster-pro:{{ .Chart.Version }}"
        {{- else }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster:{{ .Chart.Version }}"
        {{- end }}
        {{- end }}
        volumeMounts:
          - mountPath: /binaries
            name: binaries
        command:
          - /bin/sh
        args:
          - -c
          - "cp /vcluster /binaries/vcluster"
        {{- if .Values.syncer.imagePullPolicy }}
        imagePullPolicy: {{ .Values.syncer.imagePullPolicy }}
        {{- end }}
      {{- if not .Values.controller.disabled }}
      - name: kube-controller-manager
        image: "{{ .Values.defaultImageRegistry }}{{ .Values.controller.image }}"
        volumeMounts:
          - mountPath: /binaries
            name: binaries
        command:
          - /binaries/vcluster
        args:
          - cp
          - /usr/local/bin/kube-controller-manager
          - /binaries/kube-controller-manager
        {{- if .Values.controller.imagePullPolicy }}
        imagePullPolicy: {{ .Values.controller.imagePullPolicy }}
        {{- end }}
      {{- end }}
      {{- if not .Values.api.disabled }}
      - name: kube-apiserver
        image: "{{ .Values.defaultImageRegistry }}{{ .Values.api.image }}"
        volumeMounts:
          - mountPath: /binaries
            name: binaries
        command:
          - /binaries/vcluster
        args:
          - cp
          - /usr/local/bin/kube-apiserver
          - /binaries/kube-apiserver
        {{- if .Values.api.imagePullPolicy }}
        imagePullPolicy: {{ .Values.api.imagePullPolicy }}
        {{- end }}
      {{- end }}
      containers:
      - name: syncer
        {{- if .Values.syncer.image }}
        image: "{{ .Values.defaultImageRegistry }}{{ .Values.syncer.image }}"
        {{- else }}
        {{- if .Values.pro }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster-pro:{{ .Chart.Version }}"
        {{- else }}
        image: "{{ .Values.defaultImageRegistry }}ghcr.io/loft-sh/vcluster:{{ .Chart.Version }}"
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.workingDir }}
        workingDir: {{ .Values.syncer.workingDir }}
        {{- end }}
        {{- if .Values.syncer.command }}
        command:
        {{- range $f := .Values.syncer.command }}
        - {{ $f | quote }}
        {{- end }}
        {{- end }}
        args:
          - --request-header-ca-cert=/pki/front-proxy-ca.crt
          - --client-ca-cert=/pki/ca.crt
          - --server-ca-cert=/pki/ca.crt
          - --server-ca-key=/pki/ca.key
          - --kube-config=/pki/admin.conf
          - --service-account=vc-workload-{{ .Release.Name }}
          {{- if .Values.embeddedEtcd.migrateFromEtcd }}
          - --migrate-from=https://{{ .Release.Name }}-etcd:2379
          {{- end }}
          {{- include "vcluster.legacyPlugins.args" . | indent 10 }}
          {{- include "vcluster.serviceMapping.fromHost" . | indent 10 }}
          {{- include "vcluster.serviceMapping.fromVirtual" . | indent 10 }}
          {{- if .Values.defaultImageRegistry }}
          - --default-image-registry={{ .Values.defaultImageRegistry }}
          {{- end }}
          {{- if .Values.syncer.kubeConfigContextName }}
          - --kube-config-context-name={{ .Values.syncer.kubeConfigContextName }}
          {{- end }}
          {{- if .Values.pro }}
          {{- if .Values.proLicenseSecret }}
          - --pro-license-secret={{ .Values.proLicenseSecret }}
          {{- end }}
          {{- if .Values.embeddedEtcd.enabled }}
          - --etcd-embedded
          - --etcd-replicas={{ .Values.syncer.replicas }}
          {{- end }}
          {{- end }}
          {{- if (gt (int .Values.syncer.replicas) 1) }}
          - --leader-elect=true
          {{- else }}
          - --leader-elect=false
          {{- end }}
          {{- if .Values.ingress.enabled }}
          - --tls-san={{ .Values.ingress.host }}
          {{- end }}
          {{- include "vcluster.syncer.syncArgs" . | indent 10 -}}
          {{- if .Values.sync.nodes.syncAllNodes }}
          - --sync-all-nodes
          {{- end }}
          {{- if .Values.isolation.enabled }}
          - --enforce-pod-security-standard={{ .Values.isolation.podSecurityStandard }}
          {{- end}}
          {{- if .Values.sync.nodes.nodeSelector }}
          - --node-selector={{ .Values.sync.nodes.nodeSelector }}
          {{- end }}
          {{- if .Values.multiNamespaceMode.enabled }}
          - --multi-namespace-mode=true
          {{- end }}
          {{- if .Values.sync.configmaps.all }}
          - --sync-all-configmaps=true
          {{- end }}
          {{- if .Values.sync.secrets.all }}
          - --sync-all-secrets=true
          {{- end }}
          {{- if not .Values.sync.nodes.fakeKubeletIPs }}
          - --fake-kubelet-ips=false
          {{- end }}
          {{- if or .Values.proxy.metricsServer.nodes.enabled .Values.proxy.metricsServer.pods.enabled }}
          - --proxy-metrics-server=true
          {{- end }}
          {{- if .Values.coredns.integrated }}
          - --integrated-coredns=true
          {{- end }}
          {{- if .Values.centralAdmission.validatingWebhooks }}
          {{- range .Values.centralAdmission.validatingWebhooks }}
          - --enforce-validating-hook={{ . | toYaml | b64enc }}
          {{- end }}
          {{- end }}
          {{- if .Values.centralAdmission.mutatingWebhooks }}
          {{- range .Values.centralAdmission.mutatingWebhooks }}
          - --enforce-mutating-hook={{ . | toYaml | b64enc }}
          {{- end }}
          {{- end }}
          {{- if and .Values.coredns.integrated .Values.coredns.plugin.enabled }}
          - --use-coredns-plugin=true
          {{- end }}
          {{- range $f := .Values.syncer.extraArgs }}
          - {{ $f | quote }}
          {{- end }}
        {{- if .Values.syncer.livenessProbe }}
        {{- if .Values.syncer.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          failureThreshold: 10
          initialDelaySeconds: 60
          periodSeconds: 2
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.readinessProbe }}
        {{- if .Values.syncer.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          failureThreshold: 30
          periodSeconds: 2
        {{- end }}
        {{- end }}
        {{- if .Values.syncer.imagePullPolicy }}
        imagePullPolicy: {{ .Values.syncer.imagePullPolicy }}
        {{- end }}
        securityContext:
{{ toYaml .Values.syncer.securityContext | indent 10 }}
        env:
        {{- include "vcluster.plugins.config" . | indent 10 }}
          - name: VCLUSTER_DISTRO
            value: eks
          - name: VCLUSTER_NAME
            value: {{ .Release.Name }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        {{- if eq (.Values.syncer.replicas | toString | atoi) 1 }}
          - name: VCLUSTER_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        {{- end }}
        {{- if .Values.syncer.env }}
{{ toYaml .Values.syncer.env | indent 10 }}
        {{- end }}
        {{- if .Values.sync.generic.config }}
          - name: CONFIG
            value: |-
              {{- .Values.sync.generic.config | nindent 14 }}
        {{- end }}
          - name: VCLUSTER_TELEMETRY_CONFIG
            value: {{ .Values.telemetry | toJson | quote }}
          {{- if not .Values.api.disabled }}
          - name: APISERVER_COMMAND
            value: |-
              command:
                - /binaries/kube-apiserver
                - '--advertise-address=127.0.0.1'
                - '--bind-address=127.0.0.1'
                - '--allow-privileged=true'
                - '--authorization-mode=RBAC'
                - '--client-ca-file=/pki/ca.crt'
                - '--enable-bootstrap-token-auth=true'
                - '--etcd-cafile=/pki/etcd/ca.crt'
                - '--etcd-certfile=/pki/apiserver-etcd-client.crt'
                - '--etcd-keyfile=/pki/apiserver-etcd-client.key'
                {{- if .Values.embeddedEtcd.enabled }}
                - '--etcd-servers=https://127.0.0.1:2379'
                {{- else }}
                - '--etcd-servers=https://{{ .Release.Name }}-etcd:2379'
                {{- end }}
                - '--proxy-client-cert-file=/pki/front-proxy-client.crt'
                - '--proxy-client-key-file=/pki/front-proxy-client.key'
                - '--requestheader-allowed-names=front-proxy-client'
                - '--requestheader-client-ca-file=/pki/front-proxy-ca.crt'
                - '--requestheader-extra-headers-prefix=X-Remote-Extra-'
                - '--requestheader-group-headers=X-Remote-Group'
                - '--requestheader-username-headers=X-Remote-User'
                - '--secure-port=6443'
                - '--service-account-issuer=https://kubernetes.default.svc.cluster.local'
                - '--service-account-key-file=/pki/sa.pub'
                - '--service-account-signing-key-file=/pki/sa.key'
                - '--tls-cert-file=/pki/apiserver.crt'
                - '--tls-private-key-file=/pki/apiserver.key'
                - '--watch-cache=false'
                - '--endpoint-reconciler-type=none'
                {{- range $f := .Values.api.extraArgs }}
                - {{ $f | quote }}
                {{- end }}
          {{- end }}
          {{- if not .Values.controller.disabled }}
          - name: CONTROLLER_COMMAND
            value: |-
              command:
                - /binaries/kube-controller-manager
                - '--authentication-kubeconfig=/pki/controller-manager.conf'
                - '--authorization-kubeconfig=/pki/controller-manager.conf'
                - '--bind-address=127.0.0.1'
                - '--client-ca-file=/pki/ca.crt'
                - '--cluster-name=kubernetes'
                - '--cluster-signing-cert-file=/pki/ca.crt'
                - '--cluster-signing-key-file=/pki/ca.key'
                - '--controllers=*,-nodeipam,-persistentvolume-binder,-attachdetach,-persistentvolume-expander,-cloud-node-lifecycle,-ttl'
                - '--node-monitor-grace-period=1h'
                - '--node-monitor-period=1h'
                - '--horizontal-pod-autoscaler-sync-period=60s'
                - '--kubeconfig=/pki/controller-manager.conf'
                {{- if (gt (int .Values.syncer.replicas) 1) }}
                - '--leader-elect=true'
                {{- else }}
                - '--leader-elect=false'
                {{- end }}
                - '--node-monitor-grace-period=180s'
                - '--node-monitor-period=30s'
                - '--pvclaimbinder-sync-period=60s'
                - '--requestheader-client-ca-file=/pki/front-proxy-ca.crt'
                - '--root-ca-file=/pki/ca.crt'
                - '--service-account-private-key-file=/pki/sa.key'
                - '--use-service-account-credentials=true'
                {{- range $f := .Values.controller.extraArgs }}
                - {{ $f | quote }}
                {{- end }}
            {{- end }}
        volumeMounts:
        {{- include "vcluster.plugins.volumeMounts" . | indent 10 }}
          {{- if eq ( include "vcluster.kind" . ) "StatefulSet" }}
          - name: data
            mountPath: /data
          {{- end }}
          - name: helm-cache
            mountPath: /.cache/helm
          - name: tmp
            mountPath: /tmp
          - mountPath: /pki
            name: certs
          - mountPath: /binaries
            name: binaries
        {{- if .Values.syncer.volumeMounts }}
{{ toYaml .Values.syncer.volumeMounts | indent 10 }}
        {{- end }}
        {{- if .Values.syncer.extraVolumeMounts }}
{{ toYaml .Values.syncer.extraVolumeMounts | indent 10 }}
        {{- end }}
        resources:
{{ toYaml .Values.syncer.resources | indent 10 }}
{{- include "vcluster.legacyPlugins.containers" . | indent 6 }}
{{- end }}
