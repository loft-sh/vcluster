# Make sure the service-cidr is the exact service cidr of the host cluster.
# If this does not match, you won't be able to create services within the vcluster. You can find out
# the service cidr of the host cluster by creating a service with a not allowed ClusterIP in the host cluster.
# This will yield an error message in the form of: 
# The Service "faulty-service" is invalid: spec.clusterIP: Invalid value: "1.1.1.1": provided IP is not in the valid range. The range of valid IPs is 10.96.0.0/12
serviceCIDR: "10.96.0.0/12"

# DefaultImageRegistry will be prepended to all deployed vcluster images, such as the vcluster pod, coredns etc.. Deployed
# images within the vcluster will not be rewritten.
defaultImageRegistry: ""

# If the control plane is deployed in high availability mode
# Make sure to scale up the syncer.replicas, etcd.replicas, api.replicas & controller.replicas
enableHA: false

# Plugins that should get loaded. Usually you want to apply those via 'vcluster create ... -f https://.../plugin.yaml'
plugin: {}
# Manually configure a plugin called test
# test:
#   image: ...
#   env: ...
#   rbac:
#     clusterRole:
#       extraRules: ...
#     role:
#       extraRules: ...

# Resource syncers that should be enabled/disabled.
# Enabling syncers will impact RBAC Role and ClusterRole permissions.
# To disable a syncer set "enabled: false".
# See docs for details - https://www.vcluster.com/docs/architecture/synced-resources
sync:
  services:
    enabled: true
  configmaps:
    enabled: true
  secrets:
    enabled: true
  endpoints:
    enabled: true
  pods:
    enabled: true
  events:
    enabled: true
  persistentvolumeclaims:
    enabled: true
  ingresses:
    enabled: true
  fake-nodes:
    enabled: true # will be ignored if nodes.enabled = true
  fake-persistentvolumes:
    enabled: true # will be ignored if persistentvolumes.enabled = true
  nodes:
    enabled: false
    # If nodes sync is enabled, and syncAllNodes = true, the virtual cluster 
    # will sync all nodes instead of only the ones where some pods are running. 
    syncAllNodes: false
    # nodeSelector is used to limit which nodes get synced to the vcluster,
    # and which nodes are used to run vcluster pods. 
    # A valid string representation of a label selector must be used. 
    nodeSelector: ""
    # syncNodeChanges allows vcluster user edits of the nodes to be synced down to the host nodes.
    # Write permissions on node resource will be given to the vcluster.
    syncNodeChanges: false
  persistentvolumes:
    enabled: false
  storageclasses:
    enabled: false
  priorityclasses:
    enabled: false
  networkpolicies:
    enabled: false
  volumesnapshots:
    enabled: false
  poddisruptionbudgets:
    enabled: false
  serviceaccounts:
    enabled: false

# Syncer configuration
syncer:
  # Image to use for the syncer
  # image: loftsh/vcluster
  extraArgs: []
  volumeMounts:
    - mountPath: /manifests/coredns
      name: coredns
      readOnly: true
    - mountPath: /pki
      name: certs
      readOnly: true
  env: []
  livenessProbe:
    enabled: true
  readinessProbe:
    enabled: true
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi
  # Extra volumes 
  volumes: []
  # The amount of replicas to run the deployment with
  replicas: 1
  # NodeSelector used to schedule the syncer
  nodeSelector: {}
  # Affinity to apply to the syncer deployment
  affinity: {}
  # Tolerations to apply to the syncer deployment
  tolerations: []
  # Extra Labels for the syncer deployment
  labels: {}
  # Extra Annotations for the syncer deployment
  annotations: {}

# Etcd settings
etcd:
  image: public.ecr.aws/eks-distro/etcd-io/etcd:v3.4.16-eks-1-21-8
  # The amount of replicas to run 
  replicas: 1
  # NodeSelector used
  nodeSelector: {}
  # Affinity to apply
  affinity: {}
  # Tolerations to apply
  tolerations: []
  # Extra Labels 
  labels: {}
  # Extra Annotations
  annotations: {}
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
  # Storage settings for the etcd
  storage:
    # If this is disabled, vcluster will use an emptyDir instead
    # of a PersistentVolumeClaim
    persistence: true
    # Size of the persistent volume claim
    size: 5Gi
    # Optional StorageClass used for the pvc
    # if empty default StorageClass defined in your host cluster will be used
    #className:
    
# Kubernetes Controller Manager settings
controller:
  image: public.ecr.aws/eks-distro/kubernetes/kube-controller-manager:v1.21.5-eks-1-21-8
  # The amount of replicas to run the deployment with
  replicas: 1
  # NodeSelector used 
  nodeSelector: {}
  # Affinity to apply 
  affinity: {}
  # Tolerations to apply 
  tolerations: []
  # Extra Labels 
  labels: {}
  # Extra Annotations
  annotations: {}
  resources:
    requests:
      cpu: 200m

# Kubernetes API Server settings
api:
  image: public.ecr.aws/eks-distro/kubernetes/kube-apiserver:v1.21.5-eks-1-21-8
  extraArgs: []
  # The amount of replicas to run the deployment with
  replicas: 1
  # NodeSelector used to schedule the syncer
  nodeSelector: {}
  # Affinity to apply to the syncer deployment
  affinity: {}
  # Tolerations to apply to the syncer deployment
  tolerations: []
  # Extra Labels for the syncer deployment
  labels: {}
  # Extra Annotations for the syncer deployment
  annotations: {}
  resources:
    requests:
      cpu: 200m
  
# Core DNS settings
coredns:
  image: public.ecr.aws/eks-distro/coredns/coredns:v1.8.4-eks-1-21-8
  # serviceAccount:
  #   imagePullSecrets: []

# Service account that should be used by the vcluster
serviceAccount:
  create: true
  # Optional name of the service account to use
  # name: default

# Roles & ClusterRoles for the vcluster
rbac:
  clusterRole:
    # Deprecated ! 
    # Necessary cluster roles are created based on the enabled syncers (.sync.*.enabled)
    # Support for this value will be removed in a future version of the vcluster
    create: false
  role:
    # Deprecated !
    # Support for this value will be removed in a future version of the vcluster
    # and basic role will always be created
    create: true
    # Deprecated ! 
    # Necessary extended roles are created based on the enabled syncers (.sync.*.enabled)
    # Support for this value will be removed in a future version of the vcluster
    extended: false

# Service configurations
service:
  type: ClusterIP
  
# PreInstall hook configuration
preInstall:
  enabled: true

# Configure the ingress resource that allows you to access the vcluster
ingress:
  # Enable ingress record generation
  enabled: false
  # Ingress path type
  pathType: ImplementationSpecific
  apiVersion: networking.k8s.io/v1
  ingressClassName: ""
  host: vcluster.local
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

# Set "enable" to true when running vcluster in an OpenShift host
# This will add an extra rule to the deployed role binding in order 
# to manage service endpoints
openshift:
  enable: false
  